name: Django CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:20.10.11
        options: --privileged
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
      EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
      EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set up Docker Compose environment variables
        run: |
          echo "DB_HOST=${DB_HOST}" >> .env
          echo "DB_PORT=${DB_PORT}" >> .env
          echo "EMAIL_HOST=${EMAIL_HOST}" >> .env
          echo "EMAIL_HOST_USER=${EMAIL_HOST_USER}" >> .env
          echo "EMAIL_PORT=${EMAIL_PORT}" >> .env
          echo "POSTGRES_DB=${POSTGRES_DB}" >> .env
          echo "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}" >> .env
          echo "POSTGRES_USER=${POSTGRES_USER}" >> .env
          echo "SECRET_KEY=${SECRET_KEY}" >> .env
          echo "DEBUG=True" >> .env
          echo "DB_HOST=db" >> .env
          echo "DB_PORT=5432" >> .env

      - name: Build Docker Image
        run: docker compose build

      - name: Run Docker Containers
        run: docker compose up -d

      - name: Wait for Services to Start
        run: |
          until nc -zv localhost 8000; do
            echo "Waiting for service to start..."
            sleep 5
          done

      - name: Run Tests
        run: docker compose exec web python manage.py test

      - name: Clean Up Docker Containers
        run: docker compose down
